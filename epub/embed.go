// +build ignore

package main

import (
	"flag"
	"fmt"
	"io/ioutil"
	"log"
	"os"
	"path/filepath"
)

var defaultOutName = flag.String("output", "", "output file name")

var out *os.File

func visit(path string, f os.FileInfo, err error) error {
	if err != nil {
		return err
	}
	if !f.Mode().IsRegular() {
		return nil
	}

	body, err := ioutil.ReadFile(path)
	if err != nil {
		return err
	}

	fmt.Fprintf(out, "\t%q: %q,\n", filepath.ToSlash(path), body)
	return nil
}

func main() {
	flag.Parse()

	root := flag.Arg(0)

	var err error
	outName := *defaultOutName
	if outName == "" {
		outName = "template_embed.go"
	}
	out, err = os.Create(outName)
	if err != nil {
		log.Fatal(err)
	}
	defer out.Close()

	err = os.Chdir(root)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Fprint(out, `// automatically generated by embed.go

package epub

var templateFiles = map[string]string {
`)
	err = filepath.Walk(".", visit)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Fprint(out, `}
`)
}
